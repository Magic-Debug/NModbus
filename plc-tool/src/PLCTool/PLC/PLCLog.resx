<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Alarm0" xml:space="preserve">
    <value>，急停</value>
  </data>
  <data name="Alarm1" xml:space="preserve">
    <value>，放卷检测到无布</value>
  </data>
  <data name="Alarm10" xml:space="preserve">
    <value>，进布站进布轴报警</value>
  </data>
  <data name="Alarm11" xml:space="preserve">
    <value>，进布站分丝轴报警</value>
  </data>
  <data name="Alarm12" xml:space="preserve">
    <value>，收卷站收卷轴报警</value>
  </data>
  <data name="Alarm13" xml:space="preserve">
    <value>，收卷站分丝轴报警</value>
  </data>
  <data name="Alarm14" xml:space="preserve">
    <value>，放卷站放卷轴报警</value>
  </data>
  <data name="Alarm15" xml:space="preserve">
    <value>，叠布站叠布轴报警</value>
  </data>
  <data name="Alarm2" xml:space="preserve">
    <value>，上位机急停</value>
  </data>
  <data name="Alarm3" xml:space="preserve">
    <value>，卷标失败</value>
  </data>
  <data name="Alarm4" xml:space="preserve">
    <value>，变频器故障</value>
  </data>
  <data name="Alarm5" xml:space="preserve">
    <value>，放卷纠偏伺服报警</value>
  </data>
  <data name="Alarm6" xml:space="preserve">
    <value>，收卷纠偏伺服报警</value>
  </data>
  <data name="Alarm7" xml:space="preserve">
    <value>，称重位置物料没有清空</value>
  </data>
  <data name="Alarm8" xml:space="preserve">
    <value>，验布站主动轴报警</value>
  </data>
  <data name="Alarm9" xml:space="preserve">
    <value>，验布站张力轴报警</value>
  </data>
  <data name="AllAlarmItem" xml:space="preserve">
    <value>全部</value>
  </data>
  <data name="Auto" xml:space="preserve">
    <value>自动</value>
  </data>
  <data name="DeviceReady0" xml:space="preserve">
    <value>系统未准备完成</value>
  </data>
  <data name="DeviceReady1" xml:space="preserve">
    <value>系统准备完成</value>
  </data>
  <data name="DeviceRunning0" xml:space="preserve">
    <value>系统停止</value>
  </data>
  <data name="DeviceRunning1" xml:space="preserve">
    <value>系统启动</value>
  </data>
  <data name="Manual" xml:space="preserve">
    <value>手动</value>
  </data>
  <data name="MotorState0" xml:space="preserve">
    <value>电机停止</value>
  </data>
  <data name="MotorState1" xml:space="preserve">
    <value>电机启动</value>
  </data>
  <data name="ReadFileErrorMsg" xml:space="preserve">
    <value>当前文件正在写入，无法打开，请等一分钟后再查看。</value>
  </data>
  <data name="TicketAlarm0" xml:space="preserve">
    <value>，PLC开机未归零或贴标超时</value>
  </data>
  <data name="TicketAlarm1" xml:space="preserve">
    <value>，卷标超时</value>
  </data>
  <data name="TicketAlarm2" xml:space="preserve">
    <value>，气缸回缩超时</value>
  </data>
  <data name="TicketAlarm3" xml:space="preserve">
    <value>，气缸推出超时</value>
  </data>
  <data name="TicketAlarm4" xml:space="preserve">
    <value>，开启手动禁止贴标</value>
  </data>
  <data name="TicketFinish0" xml:space="preserve">
    <value>贴标未完成</value>
  </data>
  <data name="TicketFinish1" xml:space="preserve">
    <value>贴标完成</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>时间</value>
  </data>
  <data name="WorkStateSetting" xml:space="preserve">
    <value>工作状态设置为</value>
  </data>
</root>